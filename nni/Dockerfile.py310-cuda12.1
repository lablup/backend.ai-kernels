FROM nvidia/cuda:12.1.1-cudnn8-runtime-ubuntu22.04

ENV DEBIAN_FRONTEND=noninteractive \
    MPLBACKEND=Svg \
    PIP_IGNORE_INSTALLED=0 \
    PYTHONUNBUFFERED=1 \
    LD_LIBRARY_PATH="/usr/local/lib/python3.8/dist-packages/torch/lib:/usr/local/lib/python3.8/dist-packages/torch_tensorrt/lib:/usr/local/cuda/compat/lib:/usr/local/nvidia/lib:/usr/local/nvidia/lib64:/usr/local/cuda/extras/CUPTI/lib64:/usr/local/cuda-12.1/include:/usr/local/cuda-11.8/include:/usr/include/x86_64-linux-gnu" \
    PATH="/usr/local/nvm/versions/node/v16.19.1/bin:/usr/local/lib/python3.8/dist-packages/torch_tensorrt/bin:/usr/local/mpi/bin:/usr/local/nvidia/bin:/usr/local/cuda/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/local/ucx/bin:/opt/tensorrt/bin:/usr/local/src/lightgbm/LightGBM:/usr/local/bin/mecab" \
    CPLUS_INCLUDE_PATH=/usr/include/gdal \
    C_INCLUDE_PATH=/usr/include/gdal \
    LANG=C.UTF-8
RUN apt-get update -y && \
    apt-get -y install --no-install-recommends \
    apt-utils \
    git \
    curl \
    vim \
    unzip \
    wget \
    build-essential \
    cmake \
    libopenblas-dev \
    automake \
    openssh-client \
    openssh-server \
    lsof \
    python3 \
    python3-dev \
    python3-pip \
    python3-tk \
    libcupti-dev && \ 
    curl -sL https://deb.nodesource.com/setup_18.x | bash - && \
    apt-get update -y && \
    apt-get install -y nodejs && \
    apt-get clean && \
    rm -rf /var/lib/apt/lists/*

# python alternative support
RUN update-alternatives --install /usr/bin/python python /usr/bin/python3 2

WORKDIR /tmp
RUN git clone https://github.com/aristocratos/bashtop.git && \
    cd bashtop && \
    make install

# install git-lfs
WORKDIR /tmp
RUN curl -sLO https://github.com/git-lfs/git-lfs/releases/download/v3.3.0/git-lfs-linux-amd64-v3.3.0.tar.gz && \
    tar -zxf git-lfs-linux-amd64-v3.3.0.tar.gz && \
    cd git-lfs-3.3.0 && \
    bash install.sh && \
    rm -rf /tmp/*

WORKDIR /tmp
RUN python3 -m pip install --upgrade pip setuptools && \
    python3 -m pip --no-cache-dir install \
        numpy \
	scipy \
	pandas \
	lightgbm \
	&& \
    python3 -m pip --no-cache-dir install \
    	tensorflow \
	Keras \
	scikit-learn \
	&& \
    python3 -m pip install pytorch-lightning && \
    python3 -m pip install --no-cache-dir \
	torch \
	torchvision \
        torch-scatter \
	torch-sparse \
	torch-cluster \
	torch-spline-conv \
	torch-geometric \
        -f https://pytorch-geometric.com/whl/torch-2.0.0%2Bcu118.html 

# Jupyter notebook extension
RUN mkdir -p /usr/local/share/jupyter/nbextension
WORKDIR /usr/local/share/jupyter/nbextension

RUN python3 -m pip install --no-cache-dir imbalanced-learn && \
    python3 -m pip install --no-cache-dir scikit-optimize && \
    python3 -m pip install --no-cache-dir bayesian-optimization && \
    python3 -m pip install --no-cache-dir scikit-plot && \
    python3 -m pip install --no-cache-dir vecstack && \
    python3 -m pip install --no-cache-dir category_encoders && \
    python3 -m pip install --no-cache-dir scikit-surprise && \
    python3 -m pip install --no-cache-dir konlpy && \
    python3 -m pip install --no-cache-dir folium && \
    python3 -m pip install --no-cache-dir lime && \
    python3 -m pip install --no-cache-dir gensim && \
    python3 -m pip install --no-cache-dir pyldavis && \
    python3 -m pip install --no-cache-dir seaborn && \
    python3 -m pip install --no-cache-dir bokeh && \
    python3 -m pip install --no-cache-dir plotly && \
    python3 -m pip install --no-cache-dir pygal && \
    python3 -m pip install --no-cache-dir mlxtend && \
    python3 -m pip install --no-cache-dir dtreeviz && \
    python3 -m pip install --no-cache-dir pyglet && \
    python3 -m pip install --no-cache-dir descartes && \
    python3 -m pip install --no-cache-dir featuretools && \
    python3 -m pip install --no-cache-dir graphviz && \
    python3 -m pip install --no-cache-dir geopandas && \
    python3 -m pip install --no-cache-dir keras_applications && \
    python3 -m pip install --no-cache-dir keras_preprocessing && \
    python3 -m pip install --no-cache-dir pillow && \
    python3 -m pip install --no-cache-dir jupyter && \
    python3 -m pip install --no-cache-dir ipython && \
    python3 -m pip install --no-cache-dir ipywidgets && \
    python3 -m pip install --no-cache-dir ipyparallel && \
    python3 -m pip install --no-cache-dir jupyterlab && \
    python3 -m pip install --no-cache-dir jupyterthemes && \
    python3 -m pip install --no-cache-dir jupyter-js-widgets-nbextension && \
    python3 -m pip install --no-cache-dir jupyter_contrib_nbextensions && \
    python3 -m pip install --no-cache-dir jupyter_nbextensions_configurator && \
    python3 -m pip install --no-cache-dir matplotlib bokeh && \
    python3 -m pip install --no-cache-dir tensorwatch && \
    python3 -m pip install --no-cache-dir torchvision && \
    python3 -m pip install --no-cache-dir tensorflow-hub && \
    python3 -m pip install --no-cache-dir tf2onnx && \
    python3 -m pip install --no-cache-dir contextlib2 && \
    python3 -m pip install --no-cache-dir pycocotools && \
    rm -rf /root/.cache && \
    rm -f /tmp/*.whl

# Install Jupyterlab extensions
RUN python3 -m pip uninstall -y markupsafe && \
    python3 -m pip install markupsafe==2.0.1 && \
    python3 -m pip install jsonschema[format,format-nongpl]==4.17.3 

RUN python3 -m pip install --no-cache-dir \
        jupyter_nbextensions_configurator==0.6.3 \
	jupyter_contrib_nbextensions==0.7.0 \
	jupyter-contrib-core==0.4.2 \
	jupyter-highlight-selected-word==0.2.0 \
	jupyter-server==1.24.0 \
        jupyter_lsp==2.2.0 
RUN python3 -m pip install --no-cache-dir \
	jupyterlab==2.3.2 \
	jupyterlab-code-formatter==1.3.8 \
	jupyterlab-hdf \
	jupyterlab-launcher 
RUN python3 -m pip install --no-cache-dir \
	jupyter-dash \
	jupyter-js-widgets-nbextension \
	jupyter-latex-envs \
	jupyter-packaging
RUN python3 -m pip install --no-cache-dir \
	jupyter-server-mathjax \
	jupyter-server-proxy==1.6.0 \
	jupyter-telemetry==0.1.0 \
	jupyter==1.0.0 \
	jupyter_bokeh==2.0.4 
RUN python3 -m pip install --no-cache-dir \
	jupyterhub==4.0.0 \
	jupyterhub-jwtauthenticator \
	jupyterhub-kubespawner \
	jupyterhubutils \
	ipywidgets 
RUN python3 -m pip uninstall -y markupsafe && \
    python3 -m pip install markupsafe==2.0.1 && \
    python3 -m pip install -U jinja2>=3.0 && \
    jupyter contrib nbextension install && \
    jupyter serverextension enable --py jupyter_lsp && \
    jupyter serverextension enable --py jupyterlab --sys-prefix && \
    jupyter nbextension enable --py --sys-prefix widgetsnbextension && \
    jupyter nbextension enable execute_time/ExecuteTime && \
    jupyter nbextensions_configurator enable && \
    jupyter labextension install --no-build @jupyter-widgets/jupyterlab-manager && \
    jupyter lab build --dev-build=False --minimize=False


COPY policy.yml /etc/backend.ai/jail/policy.yml
COPY service-defs /etc/backend.ai/service-defs
RUN python3 -m pip --no-cache-dir install nni

RUN python3 -m ipykernel install --display-name "Microsoft NNI Kernel 23.05 on Python 3.10 (CUDA12.1)" && \
    cat /usr/local/share/jupyter/kernels/python3/kernel.json

# Backend.AI specifics
LABEL ai.backend.kernelspec="1" \
      ai.backend.envs.corecount="OPENBLAS_NUM_THREADS,OMP_NUM_THREADS,NPROC" \
      ai.backend.features="batch query uid-match user-input" \
      ai.backend.base-distro="ubuntu16.04" \
      ai.backend.resource.min.cpu="1" \
      ai.backend.resource.min.mem="1g" \
      ai.backend.resource.min.cuda.device=1 \
      ai.backend.resource.min.cuda.shares=0.1 \
      ai.backend.runtime-type="python" \
      ai.backend.runtime-path="/usr/local/bin/python" \
      ai.backend.service-ports="ipython:pty:3000,nniboard:http:8080,jupyter:http:8070,jupyterlab:http:8090"

WORKDIR /home/work
# vim: ft=dockerfile
