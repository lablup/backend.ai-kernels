FROM lablup/common-base:20.07-py36-cuda10.1

# Install TensorFlow, Keras, PyTorch and MXNet
ENV TENSORFLOW_VERSION=2.2.0

ENV PYTHONUNBUFFERED=1 \
    LD_LIBRARY_PATH="/usr/local/cuda/extras/CUPTI/lib64:/usr/local/cuda/lib64:/usr/local/nvidia/lib64:/usr/include/x86_64-linux-gnu" \
    PATH="/usr/local/mpi/bin:/usr/local/nvidia/bin:/usr/local/cuda/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/local/ucx/bin:/opt/tensorrt/bin:/usr/local/bin/mecab" \
    LANG=C.UTF-8

# Set default shell to /bin/bash
SHELL ["/bin/bash", "-cu"]

RUN python3 -m pip install --no-cache-dir --upgrade \
	    gast==0.3.3 \
	    'httplib2<0.18.0,>=0.8' \
	    'coverage<5.0,>=4.5' \
	    mock==3.0.5 \
    	    tensorflow==${TENSORFLOW_VERSION}  \
	    mesh-tensorflow==0.1.16 \
       	    tensorboard==2.2.2 

RUN python3 -m pip install --no-cache-dir --upgrade \
	    -q git+https://github.com/google-research/tensorflow_constrained_optimization 
RUN python3 -m pip install --no-cache-dir --upgrade \
	    cachetools==3.1.0 \
	    tensorflow-transform==0.22.0 \
	    tensorflow_model_analysis==0.22.2 \
	    ngraph-tensorflow-bridge==0.18.0 \
	    tensorflow-metadata==0.22.2 \
	    tensorflow-datasets==3.2.0 \
	    tensorflow_probability==0.10.1 \
    	    tensorwatch==0.9.1 \
	    tensorflow-hub==0.8.0 \
	    tensorflow-addons==0.10.0 \
	    tensorflow_text==2.2.1 \
	    neural-structured-learning==1.1.0 \
	    tensorflow_constrained_optimization \
	    tensorflow-graphics-gpu==1.0.0 \
	    tensorflow-gan==2.0.0 \
	    tensorflow-data-validation==0.22.2 \
	    tensorflow-model-optimization==0.3.0 
RUN python3 -m pip install --no-cache-dir --upgrade \
	    jupyter-tensorboard==0.2.0 \
	    tf-agents==0.5.0 \
	    tf-slim==1.1.0 \
	    tensorflow-plot==0.3.2 \
	    tensorflow-lattice==2.0.5 \
	    tensorflow-io==0.13.0  \
	    tfx==0.22.0 \
	    tfx-bsl==0.22.1 
RUN python3 -m pip install --no-cache-dir \
	    tensorflow_ranking==0.3.1 \
	    tensorflow-compression==1.3 \
	    tensor2tensor==1.15.7 \
	    jupyterlab-nvdashboard==0.3.1 

RUN python3 -m pip install --no-cache-dir --extra-index-url \
    	    https://developer.download.nvidia.com/compute/redist \
	    nvidia-dali-cuda100 && \
    python3 -m pip install --no-cache-dir --extra-index-url \
	    https://developer.download.nvidia.com/compute/redist nvidia-dali-tf-plugin-cuda100
	    
# Install Horovod, temporarily using CUDA stubs
RUN ldconfig /usr/local/cuda/targets/x86_64-linux/lib/stubs && \
    HOROVOD_GPU_ALLREDUCE=NCCL HOROVOD_GPU_BROADCAST=NCCL \
    HOROVOD_WITH_TENSORFLOW=1 HOROVOD_WITHOUT_PYTORCH=1 HOROVOD_WITHOUT_MXNET=1 \
    pip install --no-cache-dir horovod==0.19.5 && \
    ldconfig

RUN python3 -m pip install --no-cache-dir \
    	    mpi4py==3.0.3 \
	    nni==1.6 \
	    scikit-nni==0.2.1

# Install ipython kernelspec
Run python3 -m ipykernel install --display-name "TensorFlow 2.2 on Python 3.6 (CUDA 10.1)" && \
    cat /usr/local/share/jupyter/kernels/python3/kernel.json

# Backend.AI specifics
LABEL ai.backend.kernelspec="1" \
      ai.backend.envs.corecount="OPENBLAS_NUM_THREADS,OMP_NUM_THREADS,NPROC" \
      ai.backend.features="batch query uid-match user-input" \
      ai.backend.base-distro="ubuntu16.04" \
      ai.backend.resource.min.cpu="1" \
      ai.backend.resource.min.mem="1g" \
      ai.backend.resource.min.cuda.device=0 \
      ai.backend.resource.min.cuda.shares=0 \
      ai.backend.runtime-type="python" \
      ai.backend.runtime-path="/usr/bin/python3" \
      ai.backend.service-ports="ipython:pty:3000,jupyter:http:8080,jupyterlab:http:8090,vscode:http:8180,tensorboard:http:6006"

WORKDIR /home/work
# vim: ft=dockerfile
