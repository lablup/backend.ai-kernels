FROM lablup/common-base:20.03-py36-cuda10.1

# Install TensorFlow, Keras, PyTorch and MXNet
ENV TENSORFLOW_VERSION=2.2.0-rc0
#ARG CUDA=10.1
#ARG LIBNVINFER=6.0.1-1
#ARG LIBNVINFER_MAJOR_VERSION=6
#ENV CUDNN_VERSION=7.6.4.38-1+cuda10.1
#ENV NCCL_VERSION=2.4.8-1+cuda10.1
ENV DEBIAN_FRONTEND=noninteractive
ENV mecab_dicdir /usr/local/lib/mecab/dic/mecab-ko-dic

ENV PYTHONUNBUFFERED=1 \
    LD_LIBRARY_PATH="/usr/local/cuda/extras/CUPTI/lib64:/usr/local/cuda/lib64:/usr/local/nvidia/lib64:/usr/local/cuda/lib64/stubs:/usr/include/x86_64-linux-gnu" \
    PATH="/usr/local/nvidia/bin:/usr/local/cuda/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/local/bin/mecab" \
    LANG=C.UTF-8

# Set default shell to /bin/bash
SHELL ["/bin/bash", "-cu"]

RUN python3 -m pip install pip --no-cache-dir \
	    tensorflow-transform==0.21.2 \
	    tensorflow_model_analysis==0.21.6 \
	    ngraph-tensorflow-bridge \
	    adanet==0.8.0

RUN python3 -m pip install pip --no-cache-dir \
	    pandas==1.0.1 \
    	    tensorflow-gpu==${TENSORFLOW_VERSION} \
       	    tensorboard==2.1.1 \
	    tensorflow-metadata==0.21.1 \
	    tensorflow-datasets==2.1.0 \
	    tensorflow_probability==0.9.0  \
	    tensorflow-addons==0.8.3 \
	    neural-structured-learning \
	    tensorflow-model-optimization==0.2.1 \
	    tensorflow-hub==0.7.0 \
	    tensorflow_text==2.1.1 \
	    tensorflow-graphics-gpu==1.0.0 \
	    tensorflow-gan==2.0.0 \
	    tensorflow_text==2.1.1 \
	    tensorflow-data-validation==0.21.5 \
	    fairness-indicators==0.1.2 \
	    tensorboard-plugin-fairness-indicators==0.0.3 \
	    fairness==0.1.8 \
	    tfx==0.21.2 \
	    tfx-bsl==0.21.4 \
	    tf-agents==0.3.0  \
	    tensorflow-lattice-gpu==0.9.8 \
	    tensorflow-lattice==2.0.3 \
	    tensorflow_ranking==0.2.3 \
	    tensorflow-compression==1.3 \
	    tensor2tensor==1.15.4 \
	    mesh-tensorflow \
	    tensorflow-io==0.12.0 \
	    jupyter-tensorboard==0.2.0 \
    	    tensorwatch==0.8.10 \
	    jupyterlab-nvdashboard==0.2.0 

RUN python3 -m pip install --no-cache-dir \
    	    tensorwatch==0.8.10 \
	    jupyterlab-nvdashboard==0.2.0 

# Install Horovod, temporarily using CUDA stubs
RUN ldconfig /usr/local/cuda/targets/x86_64-linux/lib/stubs && \
    HOROVOD_GPU_ALLREDUCE=NCCL HOROVOD_GPU_BROADCAST=NCCL \
    HOROVOD_WITH_TENSORFLOW=1 HOROVOD_WITHOUT_PYTORCH=1 HOROVOD_WITHOUT_MXNET=1 \
    pip install --no-cache-dir horovod==0.19.0 && \
    ldconfig

RUN python3 -m pip install --no-cache-dir \
    	    mpi4py==3.0.3 \
	    nni

# Install ipython kernelspec
Run python3 -m ipykernel install --display-name "TensorFlow 2.2rc0 on Python 3.6 (CUDA 10.1)" && \
    cat /usr/local/share/jupyter/kernels/python3/kernel.json

# Jupyter notebook extension
RUN mkdir -p /home/work/.jupyter/nbextension
WORKDIR /home/work/.jupyter/nbextension

RUN jupyter nbextensions_configurator enable && \
    jupyter contrib nbextension install && \
    jupyter nbextension enable --py --sys-prefix widgetsnbextension && \
    jupyter contrib nbextension install && \
    jupyter serverextension enable --py jupyterlab --sys-prefix && \
    jupyter labextension install @jupyter-widgets/jupyterlab-manager && \
#    jupyter labextension install jupyterlab-nvdashboard && \
    git clone https://github.com/lambdalisue/jupyter-vim-binding vim_binding && \
    jupyter nbextension enable /home/work/.jupyter/nbextension/vim_binding/vim_binding 

# Backend.AI specifics
LABEL ai.backend.kernelspec="1" \
      ai.backend.envs.corecount="OPENBLAS_NUM_THREADS,OMP_NUM_THREADS,NPROC" \
      ai.backend.features="batch query uid-match user-input" \
      ai.backend.base-distro="ubuntu16.04" \
      ai.backend.resource.min.cpu="1" \
      ai.backend.resource.min.mem="1g" \
      ai.backend.resource.min.cuda.device=1 \
      ai.backend.resource.min.cuda.shares=0.1 \
      ai.backend.runtime-type="python" \
      ai.backend.runtime-path="/usr/bin/python3" \
      ai.backend.service-ports="ipython:pty:3000,tensorboard:http:6006,jupyter:http:8080,jupyterlab:http:8090"

WORKDIR /home/work
# vim: ft=dockerfile
