FROM lablup/common-base:20.09-py36-cuda10.1

RUN mkdir -p /opt/oracle && \
    cd /opt/oracle && \
    apt-get clean && \
    rm -rf /var/lib/apt/lists/* && \
    apt-get update && \
    apt-get install -y --no-install-recommends libaio1 default-libmysqlclient-dev && \
    wget https://download.oracle.com/otn_software/linux/instantclient/instantclient-basiclite-linuxx64.zip && \
    unzip instantclient-basiclite-linuxx64.zip && \
    rm -f instantclient-basiclite-linuxx64.zip && \
    cd /opt/oracle/instantclient* && \
    rm -f *jdbc* *occi* *mysql* *README *jar uidrvci genezi adrci && \
    echo /opt/oracle/instantclient* > /etc/ld.so.conf.d/oracle-instantclient.conf && \
    ldconfig

RUN python3 -m pip install --no-cache-dir --upgrade \
	    -q git+https://github.com/google-research/tensorflow_constrained_optimization 

RUN python3 -m pip install --no-cache-dir -I \
	    tensorflow-transform==0.24.1 \
	    tensorflow_model_analysis==0.24.3 \
	    tensorflow-metadata==0.24.0 \
	    tensorflow-datasets==4.0.0 \
	    tensorflow_probability==0.11.1 \ 
	    tensorflow-addons==0.11.2 \
	    neural-structured-learning==1.3.1 \
	    tensorflow-model-optimization==0.5.0 \
	    tfx==0.24.0 \
	    tfx-bsl==0.24.1 \
	    tf-agents==0.6.0  \
	    tensorflow-hub==0.9.0 \
	    tensorflow_text==2.3.0 \
	    tensorflow-graphics-gpu==1.0.0 \
	    tensorflow-gan==2.0.0 \
	    tensorflow-data-validation==0.24.1 \
	    tensorflow-plot==0.3.2 \
	    tensorflow-lattice==2.0.6 \
	    tensorflow_ranking==0.3.2 \
	    tensorflow-compression==1.3 \
	    mesh-tensorflow==0.1.16 \
	    tensorflow-io==0.15.0  \
	    jupyterlab-nvdashboard==0.4.0

RUN python3 -m pip uninstall -y \
	    numpy==1.19.2 \
	    scipy==1.4.1 \
            tensorflow==2.3.1 \
	    tensorflow-gpu==2.3.1 \
	    && \
    rm -rf /var/lib/apt/lists/* && \	
    rm -rf /root/.cache 

# Install TensorFlow, Keras, PyTorch and MXNet
ENV TENSORFLOW_VERSION=2.3.1

RUN python3 -m pip install --no-cache-dir -I \	    
       	    tensorboard==2.3.0 \
    	    tensorflow-gpu==${TENSORFLOW_VERSION}  \
	    && \
    python3 -m pip uninstall -y \
	    numpy==1.19.2 \
	    scipy==1.4.1 \
	    && \
    rm -rf /var/lib/apt/lists/* && \	
    rm -rf /root/.cache 	    

# Install scipy
ENV SCIPY_VERSION 1.5.2

WORKDIR /tmp
COPY ./numpy-1.18.5-cp36-cp36m-linux_x86_64.whl /tmp
RUN git clone --branch=v${SCIPY_VERSION} --depth=1 https://github.com/scipy/scipy.git scipy && \
    cd scipy && \
    git checkout -b v${SCIPY_VERSION} && \  
    cp site.cfg.example site.cfg && \
    echo "[mkl]" >> site.cfg && \
    echo "include_dirs = /opt/intel/compilers_and_libraries_2020.3.279/linux/mkl/include/" >> site.cfg && \
    echo "library_dirs = /opt/intel/compilers_and_libraries_2020.3.279/linux/mkl/lib/intel64" >> site.cfg && \
    echo "mkl_libs = mkl_rt" >> site.cfg && \
    echo "lapack_libs =" >> site.cfg && \
    python3 -m pip install -U --no-cache-dir \
        cython \
	/tmp/numpy-1.18.5-cp36-cp36m-linux_x86_64.whl && \
    python3 setup.py install 


RUN python3 -m pip install --extra-index-url \
       https://developer.download.nvidia.com/compute/redist nvidia-dali-cuda100 \
       && \
    python3 -m pip install --extra-index-url \
       https://developer.download.nvidia.com/compute/redist nvidia-dali-tf-plugin-cuda100
	    
# Install Horovod, temporarily using CUDA stubs
ENV HOROVOD_VERSION 0.20.3
RUN ldconfig /usr/local/cuda/targets/x86_64-linux/lib/stubs && \
    HOROVOD_GPU_ALLREDUCE=NCCL HOROVOD_GPU_BROADCAST=NCCL \
    HOROVOD_WITH_TENSORFLOW=1 HOROVOD_WITHOUT_PYTORCH=1 HOROVOD_WITHOUT_MXNET=1 \
    pip install --no-cache-dir horovod==${HOROVOD_VERSION} && \
    ldconfig

RUN python3 -m pip install --no-cache-dir --upgrade \
    	    mpi4py==3.0.3 \
	    nni==1.8 \
	    cx_oracle==8.0.1 \
	    mysqlclient==2.0.1 \
	    mlflow==1.11.0 \
	    mlflow-extend==0.1.6 \
	    scikit-nni==0.2.1

# Install ipython kernelspec
Run python3 -m ipykernel install --display-name "TensorFlow 2.3 on Python 3.6 (CUDA 10.1)" && \
    cat /usr/local/share/jupyter/kernels/python3/kernel.json

RUN apt autoclean && \
    rm -rf /var/lib/apt/lists/* && \	
    rm -rf /root/.cache && \
    rm -rf /tmp/*

# Backend.AI specifics
LABEL ai.backend.kernelspec="1" \
      ai.backend.envs.corecounest="OPENBLAS_NUM_THREADS,OMP_NUM_THREADS,NPROC" \
      ai.backend.features="batch query uid-match user-input" \
      ai.backend.base-distro="ubuntu16.04" \
      ai.backend.resource.min.cpu="1" \
      ai.backend.resource.min.mem="1g" \
      ai.backend.resource.min.cuda.device=0 \
      ai.backend.resource.min.cuda.shares=0 \
      ai.backend.runtime-type="python" \
      ai.backend.runtime-path="/usr/bin/python3" \
      ai.backend.service-ports="ipython:pty:3000,jupyter:http:8091,jupyterlab:http:8090,vscode:http:8180,tensorboard:http:6006,mlflow-ui:http:5000,nniboard:http:8080"

WORKDIR /home/work
# vim: ft=dockerfile
