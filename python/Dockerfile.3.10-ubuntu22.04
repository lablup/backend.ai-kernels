FROM ubuntu:22.04

ENV DEBIAN_FRONTEND=noninteractive \
    MPLBACKEND=Svg \
    PIP_IGNORE_INSTALLED=0 \
    PYTHONUNBUFFERED=1 \
    LD_LIBRARY_PATH="/usr/local/lib/python3.8/dist-packages/torch/lib:/usr/local/lib/python3.8/dist-packages/torch_tensorrt/lib:/usr/local/cuda/compat/lib:/usr/local/nvidia/lib:/usr/local/nvidia/lib64:/usr/local/cuda/extras/CUPTI/lib64:/usr/local/cuda-12.1/include:/usr/local/cuda-11.8/include:/usr/include/x86_64-linux-gnu" \
    PATH="/usr/local/nvm/versions/node/v16.19.1/bin:/usr/local/lib/python3.8/dist-packages/torch_tensorrt/bin:/usr/local/mpi/bin:/usr/local/nvidia/bin:/usr/local/cuda/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/local/ucx/bin:/opt/tensorrt/bin:/usr/local/src/lightgbm/LightGBM:/usr/local/bin/mecab" \
    CPLUS_INCLUDE_PATH=/usr/include/gdal \
    C_INCLUDE_PATH=/usr/include/gdal \
    LANG=C.UTF-8

WORKDIR /tmp
RUN apt-get update -y && \
    apt-get install -y software-properties-common && \
    add-apt-repository ppa:deadsnakes/ppa && \
    apt-get update && \
    apt-get install -y  && \
    apt-get -y install --no-install-recommends \
    apt-utils \
        automake \
	build-essential \
	cmake \
	curl \
	git \
	libhdf5-dev \
        proj-bin \
	libproj-dev \
        libgeos-dev \
	libgeos++-dev \
	libopenblas-dev \
	libopenblas-dev \
	lsof \
	ncurses-term \
	openssh-client \
	openssh-server \
	pkg-config \
	python3.10 \
	python3.10-dev \
	python3.10-distutils \
	python3-tk \
	unzip \
	vim \
	wget \
	libcupti-dev && \
    curl -sL https://deb.nodesource.com/setup_18.x | bash - && \
    apt-get update -y && \
    apt-get install -y nodejs && \
    update-alternatives --install /usr/bin/python python /usr/bin/python3.10 2 && \
    update-alternatives --install /usr/bin/python3 python3 /usr/bin/python3.10 2 && \
    git clone https://github.com/aristocratos/bashtop.git /tmp/bashtop && \
    cd /tmp/bashtop && \
    make install && \
    ln -sf /usr/share/terminfo/x/xterm-color /usr/share/terminfo/x/xterm-256color && \
    apt-get clean && \
    rm -rf /var/lib/apt/lists/* && \

# install git-lfs
    curl -sLO https://github.com/git-lfs/git-lfs/releases/download/v3.3.0/git-lfs-linux-amd64-v3.3.0.tar.gz && \
    tar -zxf git-lfs-linux-amd64-v3.3.0.tar.gz && \
    cd git-lfs-3.3.0 && \
    bash install.sh 
    
RUN curl https://bootstrap.pypa.io/get-pip.py | python3.10 && \
    python3.10 -m pip install --upgrade pip && \
    python3.10 -m pip install --no-cache-dir -U setuptools && \
    python3.10 -m pip install --no-cache-dir h5py && \
    python3.10 -m pip install --no-cache-dir Cython && \
    python3.10 -m pip install --no-cache-dir matplotlib bokeh && \
    python3.10 -m pip install --no-cache-dir versioneer && \
    python3.10 -m pip install --no-cache-dir pyproj cartopy && \
    python3.10 -m pip install --no-cache-dir pandas && \
    python3.10 -m pip install --no-cache-dir seaborn && \
    python3.10 -m pip install --no-cache-dir pillow && \
    python3.10 -m pip install --no-cache-dir networkx cvxpy && \
    python3.10 -m pip install --no-cache-dir scikit-learn scikit-image && \
    python3.10 -m pip install --no-cache-dir pygments && \
    python3.10 -m pip install --no-cache-dir ipython && \
    python3.10 -m pip install --no-cache-dir jupyter && \
    python3.10 -m pip install --no-cache-dir jupyterlab && \
    rm -rf /root/.cache && \
    rm -f /tmp/*.whl

# Install ipython kernelspec
RUN python3.10 -m ipykernel install --display-name "Python 3.10 on Backend.AI" && \
    cat /usr/local/share/jupyter/kernels/python3/kernel.json

RUN mkdir -p /usr/local/share/vscode/extensions && \
    curl -fL https://github.com/cdr/code-server/releases/download/v4.14.0/code-server-4.14.0-linux-amd64.tar.gz \
      | tar -C /usr/local/lib -xz && \ 
    mv /usr/local/lib/code-server-4.14.0-linux-amd64 /usr/local/lib/code-server-4.14.0 && \
    ln -s /usr/local/lib/code-server-4.14.0/bin/code-server /usr/local/bin/code-server && \
    code-server --extensions-dir /usr/local/share/vscode/extensions \
        --install-extension ms-python.python \
        --install-extension ms-ceintl.vscode-language-pack-ko \
        --install-extension bierner.emojisense  \
        --install-extension formulahendry.auto-complete-tag  \
        --install-extension moshfeu.compare-folders  \
        --install-extension usernamehw.errorlens  \
        --install-extension GrapeCity.gc-excelviewer  \
        --install-extension bierner.markdown-preview-github-styles  \
        --install-extension eamodio.gitlens  \
        --install-extension ms-toolsai.jupyter  \
        --install-extension MS-CEINTL.vscode-language-pack-ko  \
        --install-extension bierner.lit-html  \
        --install-extension yzhang.markdown-all-in-one  \
        --install-extension bierner.markdown-checkbox  \
        --install-extension bierner.markdown-emoji  \
        --install-extension bierner.markdown-footnotes  \
        --install-extension hancel.markdown-image  \
        --install-extension bierner.markdown-yaml-preamble  \
        --install-extension christian-kohler.path-intellisense  \
        --install-extension ms-python.vscode-pylance  \
        --install-extension sai.datawrangler  \
        --install-extension Face.huggingface-vscode  \
        --install-extension tomoki1207.pdf redhat.vscode-yaml 

# Backend.AI specifics
COPY ./service-defs /etc/backend.ai/service-defs
COPY policy.yml /etc/backend.ai/jail/policy.yml
LABEL ai.backend.kernelspec="1" \
      ai.backend.envs.corecount="OPENBLAS_NUM_THREADS,OMP_NUM_THREADS,NPROC" \
      ai.backend.features="batch query uid-match user-input" \
      ai.backend.resource.min.cpu="1" \
      ai.backend.resource.min.mem="256m" \
      ai.backend.base-distro="ubuntu22.04" \
      ai.backend.runtime-type="python" \
      ai.backend.runtime-path="/usr/bin/python3" \
      ai.backend.service-ports="ipython:pty:3000,jupyter:http:8070,jupyterlab:http:8090,vscode:http:8180"

WORKDIR /home/work
# vim: ft=dockerfile
