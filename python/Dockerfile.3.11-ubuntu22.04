FROM ubuntu:22.04
ENV DEBIAN_FRONTEND noninteractive
RUN apt-get update && \
    apt-get install -y \
        ca-certificates apt-utils \
        wget curl git-core \
        vim-tiny zip unzip \
        libssl-dev \
        proj-bin libproj-dev \
        libgeos-dev libgeos++-dev \
        mime-support \
        gcc g++ \
        cmake ncurses-term && \
    ln -sf /usr/share/terminfo/x/xterm-color /usr/share/terminfo/x/xterm-256color && \
    apt-get clean && \
    rm -rf /var/lib/apt/lists/

RUN apt-get update && \
    apt-get install -y software-properties-common && \
    add-apt-repository ppa:deadsnakes/ppa && \
    apt-get update && \
    apt-get install -y python3.11 python3.11-dev python3.11-distutils && \
    apt-get clean && \
    rm -rf /var/lib/apt/lists/

# BLAS / HDF5 is needed to compile pandas package.
RUN apt-get update && \
    apt-get install -y libopenblas-dev pkg-config libhdf5-dev && \
    apt-get clean && \
    rm -rf /var/lib/apt/lists/

ENV PYTHONUNBUFFERED=1 \
    PATH=/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin \
    LANG=C.UTF-8

RUN curl https://bootstrap.pypa.io/get-pip.py | python3.11 && \
    python3.11 -m pip install --upgrade pip && \
    python3.11 -m pip install --no-cache-dir -U setuptools && \
    python3.11 -m pip install --no-cache-dir h5py && \
    python3.11 -m pip install --no-cache-dir Cython && \
    python3.11 -m pip install --no-cache-dir matplotlib bokeh && \
    python3.11 -m pip install --no-cache-dir versioneer && \
    python3.11 -m pip install --no-cache-dir pyproj cartopy && \
    python3.11 -m pip install --no-cache-dir pandas && \
    python3.11 -m pip install --no-cache-dir seaborn && \
    python3.11 -m pip install --no-cache-dir pillow && \
    python3.11 -m pip install --no-cache-dir networkx cvxpy && \
    python3.11 -m pip install --no-cache-dir scikit-learn scikit-image && \
    python3.11 -m pip install --no-cache-dir pygments && \
    python3.11 -m pip install --no-cache-dir ipython && \
    python3.11 -m pip install --no-cache-dir jupyter && \
    python3.11 -m pip install --no-cache-dir jupyterlab && \
    rm -rf /root/.cache && \
    rm -f /tmp/*.whl
RUN update-alternatives --install /usr/bin/python python /usr/bin/python3.11 2
RUN update-alternatives --install /usr/bin/python3 python3 /usr/bin/python3.11 2

# Install ipython kernelspec
RUN python3.11 -m ipykernel install --display-name "Python 3.11 on Backend.AI" && \
    cat /usr/local/share/jupyter/kernels/python3/kernel.json

# Install jupyter & Julia
ARG CODE_SERVER_VERSION
ENV CODE_SERVER_VERSION ${CODE_SERVER_VERSION:-4.13.0}

RUN dpkgArch="$(dpkg --print-architecture)"; \
    case "${dpkgArch##*-}" in \
        amd64) tarArch='amd64';; \
        armhf) tarArch='armv7l';; \
        arm64) tarArch='arm64';; \
        i386) tarArch='i686';; \
        *) echo >&2 "error: current architecture ($dpkgArch) does not have a corresponding Code Server release"; exit 1 ;; \
    esac; \
    \
    curl -fL https://github.com/cdr/code-server/releases/download/v${CODE_SERVER_VERSION}/code-server-${CODE_SERVER_VERSION}-linux-${tarArch}.tar.gz \
  | tar -C /usr/local/lib -xz && \
    mv /usr/local/lib/code-server-${CODE_SERVER_VERSION}-linux-${tarArch} /usr/local/lib/code-server-${CODE_SERVER_VERSION} && \
    ln -s /usr/local/lib/code-server-${CODE_SERVER_VERSION}/bin/code-server /usr/local/bin/code-server && \
    code-server \
        --install-extension ms-python.python \
        --install-extension ms-ceintl.vscode-language-pack-ko


# Backend.AI specifics
COPY ./service-defs /etc/backend.ai/service-defs
LABEL ai.backend.kernelspec="1" \
      ai.backend.envs.corecount="OPENBLAS_NUM_THREADS,OMP_NUM_THREADS,NPROC" \
      ai.backend.features="batch query uid-match user-input" \
      ai.backend.resource.min.cpu="1" \
      ai.backend.resource.min.mem="256m" \
      ai.backend.base-distro="ubuntu22.04" \
      ai.backend.runtime-type="python" \
      ai.backend.runtime-path="/usr/bin/python3" \
      ai.backend.service-ports="ipython:pty:3000,jupyter:http:8070,jupyterlab:http:8090,vscode:http:8180"
COPY policy.yml /etc/backend.ai/jail/policy.yml

# vim: ft=dockerfile
