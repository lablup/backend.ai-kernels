FROM ubuntu:22.04
ENV DEBIAN_FRONTEND noninteractive \
    PYTHONUNBUFFERED=1 \
    PATH=/opt/conda/bin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:$PATH \
    LANG=C.UTF-8

WORKDIR /tmp
RUN apt-get update -y && \
    apt-get install -y --no-install-recommends \
        software-properties-common wget curl && \
    curl -sL https://deb.nodesource.com/setup_12.x | bash - && \
    add-apt-repository -y ppa:bashtop-monitor/bashtop && \
    apt-get update && \
    apt-get install -y --no-install-recommends \
        ca-certificates \
        wget curl git-core \
        vim-tiny zip unzip \
        libssl-dev \
        proj-bin libproj-dev \
        libgeos-dev libgeos++-dev \
        mime-support \
        gcc g++ \
	libopenblas-dev pkg-config libhdf5-dev \
	cmake ncurses-term && \
    ln -sf /usr/share/terminfo/x/xterm-color /usr/share/terminfo/x/xterm-256color && \
    wget --quiet https://repo.anaconda.com/miniconda/Miniconda3-py38_4.12.0-Linux-aarch64.sh -O /tmp/miniconda.sh && \
    /bin/bash /tmp/miniconda.sh -b -p /opt/conda && \
    rm /tmp/miniconda.sh && \
    ln -s /opt/conda/etc/profile.d/conda.sh /etc/profile.d/conda.sh && \
    echo ". /opt/conda/etc/profile.d/conda.sh" >> /root/.bashrc && \
    echo "conda activate base" >> /root/.bashrc && \
    curl -L "https://github.com/krallin/tini/releases/download/v0.19.0/tini_0.19.0.deb" > tini.deb && \
    dpkg -i tini.deb && \
    rm tini.deb && \
    git clone https://github.com/aristocratos/bashtop.git && \
    cd bashtop && \
    make install && \
    /opt/conda/bin/conda config --add channels conda-forge && \
    /opt/conda/bin/conda config --add channels bioconda && \
    /opt/conda/bin/conda config --add channels intel && \
    /opt/conda/bin/conda config --add envs_dirs /home/work/.conda && \
    /opt/conda/bin/conda update --prefix /opt/conda conda && \
    /opt/conda/bin/conda install -c intel intelpython3_core blas=*=*mkl
    apt-get clean && \
    rm -rf /var/lib/apt/lists/ 

RUN conda install cython
RUN conda install matplotlib bokeh
RUN conda install versioneer
RUN conda install pyproj cartopy 
RUN conda install pandas
RUN conda install seaborn 
RUN conda install pillow
RUN conda install h5py
RUN conda install networkx cvxpy
RUN conda install scikit-learn scikit-image
RUN conda install pygments
RUN conda install ipython
RUN conda install jupyter
RUN conda install jupyterlab 

# Install ipython kernelspec
RUN /opt/conda/bin/python -m ipykernel install \
        --prefix=/opt/conda/ \
        --display-name "Python 3.8 on Backend.AI" && \
    cat /opt/conda/share/jupyter/kernels/python3/kernel.json

# Install git-lfs
WORKDIR /tmp
RUN curl -sLO https://github.com/git-lfs/git-lfs/releases/download/v3.2.0/git-lfs-linux-amd64-v3.2.0.tar.gz && \
    tar -zxf git-lfs-linux-amd64-v3.2.0.tar.gz && \
    bash install.sh && \
    rm -rf /tmp/*

# Install VSCode
RUN curl -fL https://github.com/cdr/code-server/releases/download/v4.7.1/code-server-4.7.1-linux-amd64.tar.gz \
  | tar -C /usr/local/lib -xz && \
    mv /usr/local/lib/code-server-4.7.1-linux-amd64 /usr/local/lib/code-server-4.7.1 && \
    ln -s /usr/local/lib/code-server-4.7.1/bin/code-server /usr/local/bin/code-server

# Backend.AI specifics
COPY ./service-defs /etc/backend.ai/service-defs
COPY policy.yml /etc/backend.ai/jail/policy.yml
LABEL ai.backend.kernelspec="1" \
      ai.backend.envs.corecount="OPENBLAS_NUM_THREADS,OMP_NUM_THREADS,NPROC" \
      ai.backend.features="batch query uid-match user-input" \
      ai.backend.resource.min.cpu="1" \
      ai.backend.resource.min.mem="256m" \
      ai.backend.base-distro="ubuntu16.04" \
      ai.backend.runtime-type="python" \
      ai.backend.runtime-path="/opt/conda/bin/python" \
      ai.backend.service-ports="ipython:pty:3000,jupyter:http:8080,vscode:http:8180,jupyterlab:http:8090"

# vim: ft=dockerfile
