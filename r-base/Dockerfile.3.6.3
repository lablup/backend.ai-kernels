FROM ubuntu:18.04
# Ubuntu 18.04 comes with Python 3.6

ENV R_VERSION 3.6.3

RUN apt-get update && \
    apt-get install -y \
        ca-certificates \
        wget curl git-core \
        python3 python3-dev python3-pip \
        libssl-dev \
        libmpdec2 \
        proj-bin libproj-dev \
        libgeos-dev libgeos++-dev \
        mime-support \
	    locales \
	    fonts-texgyre \
	    less \
	    vim-tiny \
	    liblapack3 \
        gcc g++ gfortran && \
    apt-get autoclean && \
    rm -rf /var/lib/apt/lists/*

RUN curl -sL https://deb.nodesource.com/setup_20.x | bash - && \
    apt-get update -y && \
    apt-get install -y nodejs 

ENV PATH=/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin \
    LD_LIBRARY_PATH="/usr/lib/R/lib" \
    LC_ALL=en_US.UTF-8 \
    LANG=en_US.UTF-8 \
    DEBIAN_FRONTEND=noninteractive

RUN echo "en_US.UTF-8 UTF-8" >> /etc/locale.gen \
	&& locale-gen en_US.utf8 \
	&& /usr/sbin/update-locale LANG=en_US.UTF-8 

RUN apt update && \
    apt install -y software-properties-common && \
    apt-key adv --keyserver keyserver.ubuntu.com --recv-keys E298A3A825C0D65DFD57CBB651716619E084DAB9 && \
    add-apt-repository 'deb https://cloud.r-project.org/bin/linux/ubuntu bionic-cran35/' && \
    apt update && \
    apt install -y --no-install-recommends \
    	littler \
	    r-cran-littler \
	    r-base=${R_VERSION}-* \
	    r-base-dev=${R_VERSION}-* \
	    r-recommended=${R_VERSION}-* \
	    libxml2-dev && \
    ldd /usr/lib/R/lib/libR.so 

RUN ln -s /usr/lib/R/site-library/littler/examples/build.r /usr/local/bin/build.r && \
    ln -s /usr/lib/R/site-library/littler/examples/check.r /usr/local/bin/check.r && \
    ln -s /usr/lib/R/site-library/littler/examples/install.r /usr/local/bin/install.r && \
    ln -s /usr/lib/R/site-library/littler/examples/install2.r /usr/local/bin/install2.r && \
    ln -s /usr/lib/R/site-library/littler/examples/installBioc.r /usr/local/bin/installBioc.r && \
    ln -s /usr/lib/R/site-library/littler/examples/installGithub.r /usr/local/bin/installGithub.r && \
    ln -s /usr/lib/R/site-library/littler/examples/testInstalled.r /usr/local/bin/testInstalled.r && \
    install.r docopt && \
    rm -rf /tmp/downloaded_packages/ /tmp/*.rds && \
    rm -rf /var/lib/apt/lists/*

WORKDIR /tmp
RUN curl -sLO https://github.com/git-lfs/git-lfs/releases/download/v2.11.0/git-lfs-linux-amd64-v2.11.0.tar.gz && \
    tar -zxf git-lfs-linux-amd64-v2.11.0.tar.gz && \
    bash install.sh && \
    rm -rf /tmp/*

# Install commonly-used wheels
# python alternative support
RUN update-alternatives --install /usr/bin/python python /usr/bin/python3 2
RUN curl https://bootstrap.pypa.io/get-pip.py | python3 && \
    python3 -m pip install --no-cache-dir ipython && \
    python3 -m pip install --no-cache-dir jupyter && \
    python3 -m pip install --no-cache-dir ipywidgets && \
    python3 -m pip install --no-cache-dir ipyparallel && \
    python3 -m pip install --no-cache-dir jupyterlab && \
    python3 -m pip install --no-cache-dir jupyterthemes && \    
    python3 -m pip install --no-cache-dir jupyter-js-widgets-nbextension && \
    python3 -m pip install --no-cache-dir jupyter_contrib_nbextensions && \
    python3 -m pip install --no-cache-dir jupyter_nbextensions_configurator && \
    rm -rf /root/.cache && \
    rm -f /tmp/*.whl

RUN Rscript -e "install.packages(c('rzmq','repr','IRkernel','IRdisplay'),type = 'source')" && \
    Rscript -e "install.packages(c('slidify','ggplot2','devtools'))" && \
    Rscript -e "install.packages(c('KoNLP'))" && \
    Rscript -e "install.packages(c('stm','stmCorrViz'))" && \
    Rscript -e "install.packages(c('jsonlite','jsonview','XML','xml2','xmlview'))" && \
    Rscript -e "install.packages(c('igraph'))"
RUN Rscript -e "IRkernel::installspec(displayname = 'R-base 3.6.3 On Backend.AI' , user = FALSE)" && \
    rm -rf /root/.local/share/jupyter && \
    jupyter kernelspec list && \
    cat /usr/local/share/jupyter/kernels/ir/kernel.json 
    
RUN jupyter nbextensions_configurator enable && \
    jupyter contrib nbextension install && \
    jupyter nbextension enable --py --sys-prefix widgetsnbextension && \
    jupyter contrib nbextension install && \
    jupyter serverextension enable --py jupyterlab --sys-prefix && \
    jupyter labextension install --no-build @jupyter-widgets/jupyterlab-manager && \
    jupyter labextension install --no-build @krassowski/jupyterlab-lsp && \
    jupyter labextension install --no-build @jupyterlab/toc && \
    jupyter labextension install --no-build jupyterlab-nvdashboard && \
    jupyter lab build

COPY ./service-defs /etc/backend.ai/service-defs

LABEL ai.backend.kernelspec="1" \
      ai.backend.envs.corecount="OPENBLAS_NUM_THREADS,OMP_NUM_THREADS,NPROC" \
      ai.backend.features="batch query uid-match user-input" \
      ai.backend.resource.min.cpu="1" \
      ai.backend.resource.min.mem="256m" \
      ai.backend.base-distro="ubuntu16.04" \
      ai.backend.runtime-type="r" \
      ai.backend.runtime-path="/usr/bin/python3" \
      ai.backend.service-ports="ipython:pty:3000,jupyter:http:8080,jupyterlab:http:8090"

WORKDIR /home/work
