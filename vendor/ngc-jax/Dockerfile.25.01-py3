FROM nvcr.io/nvidia/jax:25.01-py3
# NVIDIA NGC JAX with Python 3.12 

ENV CODESERVER=4.96.4
ENV DEBIAN_FRONTEND=noninteractive \
    MPLBACKEND=Svg \
    PIP_IGNORE_INSTALLED=0 \
    PYTHONUNBUFFERED=1 \
    LD_LIBRARY_PATH="/usr/local/lib/python3.12/dist-packages/torch/lib:/usr/local/lib/python3.12/dist-packages/torch_tensorrt/lib:/usr/local/cuda/compat/lib:/usr/local/nvidia/lib:/usr/local/nvidia/lib64:/usr/local/cuda/extras/CUPTI/lib64:/usr/local/cuda-12.8:/usr/local/cuda-12.8/include:/usr/include/x86_64-linux-gnu" \
    PATH="/usr/local/lib/python3.12/dist-packages/torch_tensorrt/bin:/usr/local/mpi/bin:/usr/local/nvidia/bin:/usr/local/cuda/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/local/ucx/bin:/opt/tensorrt/bin" \
    CPLUS_INCLUDE_PATH=/usr/include/gdal \
    C_INCLUDE_PATH=/usr/include/gdal \
    LANG=C.UTF-8

RUN apt-key adv --refresh-keys --keyserver keyserver.ubuntu.com 
RUN apt-get update && \
    apt-get install -y --no-install-recommends \
    automake \
    bison \
    build-essential \
    bzip2 \
    ca-certificates \
    cabextract \
    chrpath \
    devscripts \
    dh-make \
    dirmngr \
    dkms \
    dpatch \
    ethtool \
    fakeroot \
    ffmpeg \
    flex \
    fonts-nanum \
    fonts-nanum-coding \
    fonts-nanum-extra \
    g++ \
    gcc \
    gdal-bin \
    gfortran \
    gir1.2-gtk-3.0 \
    git \
    graphviz \
    htop \
    iputils-ping \
    libasound2-dev \
    libatlas-base-dev \
    libavcodec-dev \
    libavformat-dev \
    libboost-dev \
    libboost-filesystem-dev \
    libboost-system-dev \
    libcairo-dev \
    libcairo2-dev \
    libcurl3-dev \
    libdc1394-dev \
    libeigen3-dev \
    libfaac-dev \
    libfftw3-dev \
    libfreetype6-dev \
    libfuse2 \
    libgdal-dev \
    libgeos++-dev \
    libgeos-dev \
    libgflags-dev \
    libgirepository1.0-dev \
    libglib2.0-0 \
    libgoogle-glog-dev \
    libgphoto2-dev \
    libgstreamer-plugins-base1.0-dev \
    libgstreamer1.0-dev \
    libgtk-3-dev \
    libhdf5-dev \
    libhdf5-serial-dev \
    libjemalloc-dev \
    libjpeg-dev \
    liblapack-dev \
    libmnl0 \
    libmp3lame-dev \
    libmpdec-dev \
    libncurses-dev \
    libnl-3-200 \
    libnl-3-dev \
    libnl-route-3-200 \
    libnl-route-3-dev \
    libnlopt-dev \
    libnuma-dev \
    libopenblas-dev \
    libopencore-amrnb-dev \
    libopencore-amrwb-dev \
    libpci3 \
    libpng-dev \
    libportmidi-dev \
    libproj-dev \
    libprotobuf-dev \
    libsdl2-dev \
    libsdl-image1.2-dev \
    libsdl-mixer1.2-dev \
    libsdl-ttf2.0-dev \
    libsm6 \
    libsmpeg-dev \
    libssl-dev \
    libswscale-dev \
    libswresample-dev \
    libtbb-dev \
    libtheora-dev \
    libtiff-dev \
    libv4l-dev \
    libvorbis-dev \
    libx264-dev \
    libxext6 \
    libxine2-dev \
    libxml2-dev \
    libxrender-dev \
    libxrender1 \
    libxslt1-dev \
    libxvidcore-dev \
    libzmq3-dev \
    lintian \
    lsof \
    make \
    mercurial \
    mime-support \
    mpich \
    ncurses-term \
    net-tools \
    openssh-client \
    openssh-server \
    pbzip2 \
    pciutils \
    pdsh \
    pkg-config \
    proj-bin \
    protobuf-compiler \
    pv \
    python-is-python3 \
    python-xkit \
    python3-gdal \
    screen-resolution-extra \
    sudo \
    subversion \
    swig \
    tk \
    unzip \
    v4l-utils \
    vim \
    x264 \
    xvfb \
    xz-utils \
    sudo \
    yarn \
    yasm \
    zip \
    tcl \
    udev \
    && \
    ldconfig && \
    cd /tmp && \
    curl -sL https://deb.nodesource.com/setup_20.x -o /tmp/nodesource_setup.sh && \ 
    bash /tmp/nodesource_setup.sh && \
    apt-get update ; apt-get install -y nodejs && \
# Install CUDA + cuDNN
    mkdir -p /usr/local/nvidia/lib && \
    ln -s /usr/lib/x86_64-linux-gnu/libcudnn.so.9.7.0 /usr/local/cuda/lib64/libcudnn.so && \
    ldconfig && \
    update-alternatives --install /usr/bin/python python /usr/bin/python3 2 

WORKDIR /tmp
RUN cd /tmp && \
    curl -sLO https://github.com/git-lfs/git-lfs/releases/download/v3.5.1/git-lfs-linux-amd64-v3.5.1.tar.gz && \
    tar -zxf git-lfs-linux-amd64-v3.5.1.tar.gz && \
    cd git-lfs-3.5.1 && \
    bash install.sh && \
    git clone https://github.com/aristocratos/bashtop.git && \
    cd bashtop && \
    make install && \
    rm -rf /tmp/* 

RUN curl -fL https://github.com/cdr/code-server/releases/download/v$CODESERVER/code-server-$CODESERVER-linux-amd64.tar.gz \
      | tar -C /usr/local/lib -xz && \ 
    mv /usr/local/lib/code-server-$CODESERVER-linux-amd64 /usr/local/lib/code-server-$CODESERVER && \
    ln -s /usr/local/lib/code-server-$CODESERVER/bin/code-server /usr/local/bin/code-server 

RUN  python3 -m pip install --no-cache-dir --upgrade setuptools && \
    python3 -m pip install --no-cache-dir h5py && \
    python3 -m pip install --no-cache-dir Cython && \
    python3 -m pip install --no-cache-dir matplotlib bokeh && \
    python3 -m pip install --no-cache-dir versioneer && \
    python3 -m pip install --no-cache-dir pyproj cartopy && \
    python3 -m pip install --no-cache-dir pandas && \
    python3 -m pip install --no-cache-dir seaborn && \
    python3 -m pip install --no-cache-dir pillow && \
    python3 -m pip install --no-cache-dir networkx cvxpy && \
    python3 -m pip install --no-cache-dir scikit-learn scikit-image && \
    python3 -m pip install --no-cache-dir pygments && \
    python3 -m pip install --no-cache-dir ipython && \
    python3 -m pip install --no-cache-dir jupyter && \
    python3 -m pip install --no-cache-dir jupyterlab && \
    python3 -m pip install --no-cache-dir flax 

# Install ipython kernelspec
RUN python3 -m ipykernel install --display-name "JAX (NGC 25.01/Python 3.12) on Backend.AI" && \
    cat /usr/local/share/jupyter/kernels/python3/kernel.json
# Backend.AI specifics
COPY ./service-defs /etc/backend.ai/service-defs
COPY ./runner-scripts/bootstrap.sh runner-scripts/setup_multinode.py /opt/container/

LABEL ai.backend.kernelspec="1" \
      ai.backend.envs.corecount="" \
      ai.backend.features="batch query uid-match user-input" \
      ai.backend.base-distro="ubuntu24.04" \
      ai.backend.accelerators="cuda" \
      ai.backend.resource.min.cpu="1" \
      ai.backend.resource.min.mem="1g" \
      ai.backend.resource.min.cuda.device=1 \
      ai.backend.resource.min.cuda.shares=0 \
      ai.backend.runtime-type="python" \
      ai.backend.runtime-path="/usr/bin/python" \
      ai.backend.service-ports="ipython:pty:3000,jupyter:http:8070,jupyterlab:http:8090,vscode:http:8180"


RUN apt autoclean && \
    sed -i 's/source \/usr\/local\/nvm\/nvm.sh//' /etc/bash.bashrc && \
    ln -sf /usr/share/terminfo/x/xterm-color /usr/share/terminfo/x/xterm-256color && \
    rm -f /tmp/*.whl /tmp/requirem* && \
    rm -rf /var/lib/apt/lists/* && \    
    rm -rf /root/.cache && \
    rm -rf /tmp/*
    

WORKDIR /home/work
